{"version":3,"sources":["images/whiskey.jpg","images/hazel.jpg","images/tubby.jpg","DogList.js","DogDetails.js","Routes.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DogList","className","this","props","dogs","map","dog","key","name","to","src","alt","Component","DogDetails","age","facts","fact","i","Routers","exact","path","render","match","params","currentDog","find","toLowerCase","Navbar","dogLinks","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","Routes","defaultProps","whiskey","hazel","tubby","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.676d7157.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiskey.5c1e3b17.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hazel.4eb85e80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tubby.2f47cb65.jpg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './DogList.css';\nimport { getNodeText } from '@testing-library/react';\n\nclass DogList extends Component {\n    render() {\n        return(\n            <div className=\"DogList\">\n                <h1 className=\"display-1 text-center mt-4 mb-4\">Dog List</h1>\n               \n                    <div className=\"row\">\n                        {this.props.dogs.map(dog => (\n                            <div className=\"Dog col-md-6 col-lg-4 text-center\" key={dog.name}>\n\n                            <Link  to={`/dogs/${dog.name}`} >\n                                <img className=\"rounded-circle\" src={dog.src} alt={dog.name} />\n                                <h3 className=\"Underline\">\n                                    {dog.name}\n                                </h3>\n                            </Link>\n                            </div>\n                        ))}\n                        \n                    </div>\n              \n\n            </div>\n        );  \n    }\n}\n\nexport default DogList;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './DogDetails.css';\n\nclass DogDetails extends Component {\n    render(){\n        let { dog } = this.props;\n        return (\n        <div className=\"DogDetails row justify-content-center mt-5\">\n            <div className=\"col-11 col-lg-5\">\n                <div className=\"DogDetails-card card\">\n                    <img className=\"card-img-top\" src={dog.src} alt={dog.name} />\n                    <div className=\"card-body\">\n                        <h2 className=\"card-title\">\n                            {dog.name}\n                        </h2>\n                        <h4 className=\"card-subtitle text-muted\">\n                            {dog.age} years old\n                        </h4>\n                    </div>\n                    <ul className=\"list-group list-group-flush\">\n                        {dog.facts.map((fact, i) => (\n                            <li className=\"list-group-item\" key={i}>{fact}</li>\n                        ))}\n                    </ul>\n                    <div className=\"card-body\">\n                        <Link to=\"/dogs\" className=\"btn btn-warning\">Go Back</Link>\n                    </div>\n                </div>  \n            </div>\n        </div>\n \n        );\n    }\n}\n\nexport default DogDetails;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport DogList from './DogList';\nimport DogDetails from './DogDetails';\n\nclass Routers extends Component {\n    render(){\n        const getDog = props => {\n            let name =props.match.params.name;\n            let currentDog = this.props.dogs.find(\n              dog => dog.name.toLowerCase() === name.toLowerCase()\n            );\n            return <DogDetails {...props} dog={currentDog} />\n        }\n        return (\n            <Switch>\n                <Route exact path=\"/dogs\" render={() => <DogList dogs={this.props.dogs}/>} />\n                <Route exact path=\"/dogs/:name\" render={getDog} />\n                <Redirect to=\"/dogs\" />\n            </Switch>\n        );\n    }\n}\n\nexport default Routers;","import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nclass Navbar extends Component {\n    render(){\n        const dogLinks = this.props.dogs.map(dog => (\n            <li className=\"nav-item\" key={dog.name}>\n                <NavLink to={`/dogs/${dog.name}`} className=\"nav-link\" >\n                    {dog.name}\n                </NavLink>\n            </li>\n        ));\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <Link to=\"/dogs\" className=\"navbar-brand\">Dog App</Link>\n                \n                <button \n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                    >\n                        <span className=\"navbar-toggler-icon\" />\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                        <NavLink exact to=\"/dogs\" className=\"nav-link\">Home</NavLink>\n                        </li>\n                        {dogLinks}\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport Routes from './Routes';\nimport Navbar from './Navbar';\nimport whiskey from './images/whiskey.jpg';\nimport hazel from './images/hazel.jpg';\nimport tubby from './images/tubby.jpg';\nimport './App.css';\n\nclass App extends Component{\n  static defaultProps = {\n    dogs: [\n      {\n        name: \"Whiskey\",\n        age: 5,\n        src: whiskey,\n        facts: [\n          \"Whiskey loves eating popcorn.\",\n          \"Whiskey is a terrible guard dog.\",\n          \"Whiskey wants to cuddle with you!\"\n        ]\n      },\n      {\n        name: \"Hazel\",\n        age: 3,\n        src: hazel,\n        facts: [\n          \"Hazel has soooo much energy!\",\n          \"Hazel is highly intelligent.\",\n          \"Hazel loves people more than dogs.\"\n        ]\n      },\n      {\n        name: \"Tubby\",\n        age: 4,\n        src: tubby,\n        facts: [\n          \"Tubby is not the brightest dog\",\n          \"Tubby does not like walks or exercise.\",\n          \"Tubby loves eating food.\"\n        ]\n      }\n    ]\n  };\n  render(){\n    \n    return (\n        <div>\n          <Navbar dogs={this.props.dogs} /> \n          <div className=\"container\">\n            <Routes dogs={this.props.dogs} />\n          </div> \n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}